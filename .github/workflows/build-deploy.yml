name: Build and Deploy Code # Workflow name 

on: [push, pull_request] # What should trigger our workflow to run | Run on all branches 
  # push: # Specify the branch that should run when you push or pull 
  #   branches:
  #     - "main"
  # pull_request: 
  #   branches:
  #     - "test_branch"

jobs: # Create a job. A job is a set of steps that execute on the same runner 
  build:
    environment: 
      name: Testing # Environment for secrets 
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}} 
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services: # Setup postgres service container for test database for runner 
      postgres: 
        image: postgres 
        env: 
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test 
        ports: 
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-18.04 # Machine on which the job will run on 
    # Provide a list of steps 
    steps: 
      - name: pulling git repo 
        uses: actions/checkout@v3 # Actual command to run 
      # - name: say hi to lauben 
      #   run: echo "Lauben" # Run a command e.g echo "Lauben" 
      - name: Install python version 3.10.0 
        uses: actions/setup-python@v3 
        with: 
          python-version: '3.10.0'
      - name: update pip 
        run: python -m pip install --upgrade pip 
      - name: Install all dependencies 
        run: pip install -r requirements.txt 
      # Run pytest 
      - name: test with pytest 
        run: | # Pipe if you want to run a list of commands 
          pip install pytest 
          pytest 

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:buildcache,mode=max
      - name: push changes to production 

  # deploy:
  #   runs-on: ubuntu-18.04 # Machine on which the job will run on 
  #   needs: [build]
  #   # Provide a list of steps 
  #   steps: 
  #     - name: deploying stuff 
  #       run: echo "going to deploy some stuff" 
      